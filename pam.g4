grammar pam;
program :   series NEWLINE;
series	: 	stmt (';' stmt)*;
stmt	:	input_stmt | output_stmt | assign_stmt | cond_stmt | loop;
input_stmt:	'read' varlist;
output_stmt:	'write' varlist;
assign_stmt:	VARNAME ':=' expr;
cond_stmt:	'if' compar 'then' series ('else' series)?  'fi';
loop	:	'while' compar 'do' series 'end';
compar	:	expr RELATION expr;
varlist	:	VARNAME (',' VARNAME)*;
expr	:	term (WEAKOP term)*;
term	:	elem (STRONGOP elem)*;
elem	:	NUMBER | VARNAME | '(' expr ')';
NEWLINE	:	'\r' ? '\n';
WEAKOP	:	'+' | '-';
STRONGOP:	'*' | '/';
RELATION:	'<>' | '=<' | '>='| '=' |  '<' | '>'  ;
NUMBER	:	[0]|[1-9][0-9]* ;
VARNAME	:	([a-z]|[A-Z]|'_') ([a-z]|[A-Z]|[0-9]|'_')*;
WS      :   [ \t\r\n]+ -> skip;